/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isString } from '../utils/utils';
var TestPipe = /** @class */ (function () {
    function TestPipe() {
    }
    /**
     * @param {?} input
     * @param {?} pattern
     * @param {?} flag
     * @return {?}
     */
    TestPipe.prototype.transform = /**
     * @param {?} input
     * @param {?} pattern
     * @param {?} flag
     * @return {?}
     */
    function (input, pattern, flag) {
        if (!isString(input) || !pattern) {
            return input;
        }
        var /** @type {?} */ regexp = pattern instanceof RegExp ? pattern : new RegExp(pattern, flag);
        return regexp.test(input);
    };
    TestPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'test'
                },] },
    ];
    return TestPipe;
}());
export { TestPipe };
function TestPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    TestPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    TestPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1waXBlcy8iLCJzb3VyY2VzIjpbInN0cmluZy90ZXN0LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7Ozs7OztJQVF4Qyw0QkFBUzs7Ozs7O0lBQVQsVUFBVyxLQUFVLEVBQUUsT0FBWSxFQUFFLElBQVM7UUFFNUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDZDtRQUVELHFCQUFNLE1BQU0sR0FBRyxPQUFPLFlBQVksTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUUvRSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUMzQjs7Z0JBZEYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxNQUFNO2lCQUNiOzttQkFORDs7U0FPYSxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSAgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICd0ZXN0J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgVGVzdFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKGlucHV0OiBhbnksIHBhdHRlcm46IGFueSwgZmxhZzogYW55KTogYW55IHtcclxuICAgIFxyXG4gICAgaWYgKCFpc1N0cmluZyhpbnB1dCkgfHwgIXBhdHRlcm4pIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCByZWdleHAgPSBwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwID8gcGF0dGVybiA6IG5ldyBSZWdFeHAocGF0dGVybiwgZmxhZyk7XHJcbiAgICBcclxuICAgIHJldHVybiByZWdleHAudGVzdChpbnB1dCk7XHJcbiAgfVxyXG59Il19