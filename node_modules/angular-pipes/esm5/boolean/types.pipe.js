/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isNull, isNil, isUndefined, isFunction, isArray, isString, isObject, isNumber } from '../utils/utils';
var IsNullPipe = /** @class */ (function () {
    function IsNullPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsNullPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isNull(value);
    };
    IsNullPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isNull'
                },] },
    ];
    return IsNullPipe;
}());
export { IsNullPipe };
function IsNullPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsNullPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsNullPipe.ctorParameters;
}
var IsUndefinedPipe = /** @class */ (function () {
    function IsUndefinedPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsUndefinedPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isUndefined(value);
    };
    IsUndefinedPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isUndefined'
                },] },
    ];
    return IsUndefinedPipe;
}());
export { IsUndefinedPipe };
function IsUndefinedPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsUndefinedPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsUndefinedPipe.ctorParameters;
}
var IsNilPipe = /** @class */ (function () {
    function IsNilPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsNilPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isNil(value);
    };
    IsNilPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isNil'
                },] },
    ];
    return IsNilPipe;
}());
export { IsNilPipe };
function IsNilPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsNilPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsNilPipe.ctorParameters;
}
var IsFunctionPipe = /** @class */ (function () {
    function IsFunctionPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsFunctionPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isFunction(value);
    };
    IsFunctionPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isFunction'
                },] },
    ];
    return IsFunctionPipe;
}());
export { IsFunctionPipe };
function IsFunctionPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsFunctionPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsFunctionPipe.ctorParameters;
}
var IsNumberPipe = /** @class */ (function () {
    function IsNumberPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsNumberPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isNumber(value);
    };
    IsNumberPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isNumber'
                },] },
    ];
    return IsNumberPipe;
}());
export { IsNumberPipe };
function IsNumberPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsNumberPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsNumberPipe.ctorParameters;
}
var IsStringPipe = /** @class */ (function () {
    function IsStringPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsStringPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isString(value);
    };
    IsStringPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isString'
                },] },
    ];
    return IsStringPipe;
}());
export { IsStringPipe };
function IsStringPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsStringPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsStringPipe.ctorParameters;
}
var IsArrayPipe = /** @class */ (function () {
    function IsArrayPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsArrayPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isArray(value);
    };
    IsArrayPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isArray'
                },] },
    ];
    return IsArrayPipe;
}());
export { IsArrayPipe };
function IsArrayPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsArrayPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsArrayPipe.ctorParameters;
}
var IsObjectPipe = /** @class */ (function () {
    function IsObjectPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsObjectPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return isObject(value);
    };
    IsObjectPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isObject'
                },] },
    ];
    return IsObjectPipe;
}());
export { IsObjectPipe };
function IsObjectPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsObjectPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsObjectPipe.ctorParameters;
}
var IsDefinedPipe = /** @class */ (function () {
    function IsDefinedPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    IsDefinedPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return !isUndefined(value);
    };
    IsDefinedPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'isDefined'
                },] },
    ];
    return IsDefinedPipe;
}());
export { IsDefinedPipe };
function IsDefinedPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IsDefinedPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IsDefinedPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGlwZXMvIiwic291cmNlcyI6WyJib29sZWFuL3R5cGVzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFDTCxNQUFNLEVBQ04sS0FBSyxFQUNMLFdBQVcsRUFDWCxVQUFVLEVBQ1YsT0FBTyxFQUNQLFFBQVEsRUFDUixRQUFRLEVBQ1IsUUFBUSxFQUNULE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7O0lBT3RCLDhCQUFTOzs7O0lBQVQsVUFBVyxLQUFVO1FBRW5CLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDdEI7O2dCQVJGLElBQUksU0FBQztvQkFDSixJQUFJLEVBQUUsUUFBUTtpQkFDZjs7cUJBZEQ7O1NBZWEsVUFBVTs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFhckIsbUNBQVM7Ozs7SUFBVCxVQUFXLEtBQVU7UUFFbkIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUMzQjs7Z0JBUkYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxhQUFhO2lCQUNwQjs7MEJBekJEOztTQTBCYSxlQUFlOzs7Ozs7Ozs7Ozs7Ozs7OztJQWExQiw2QkFBUzs7OztJQUFULFVBQVcsS0FBVTtRQUVuQixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3JCOztnQkFSRixJQUFJLFNBQUM7b0JBQ0osSUFBSSxFQUFFLE9BQU87aUJBQ2Q7O29CQXBDRDs7U0FxQ2EsU0FBUzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFhcEIsa0NBQVM7Ozs7SUFBVCxVQUFXLEtBQVU7UUFFbkIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUMxQjs7Z0JBUkYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxZQUFZO2lCQUNuQjs7eUJBL0NEOztTQWdEYSxjQUFjOzs7Ozs7Ozs7Ozs7Ozs7OztJQWF6QixnQ0FBUzs7OztJQUFULFVBQVcsS0FBVTtRQUVuQixNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3hCOztnQkFSRixJQUFJLFNBQUM7b0JBQ0osSUFBSSxFQUFFLFVBQVU7aUJBQ2pCOzt1QkExREQ7O1NBMkRhLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBYXZCLGdDQUFTOzs7O0lBQVQsVUFBVyxLQUFVO1FBRW5CLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDeEI7O2dCQVJGLElBQUksU0FBQztvQkFDSixJQUFJLEVBQUUsVUFBVTtpQkFDakI7O3VCQXJFRDs7U0FzRWEsWUFBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFjdkIsK0JBQVM7Ozs7SUFBVCxVQUFXLEtBQVU7UUFFbkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN2Qjs7Z0JBUkYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxTQUFTO2lCQUNoQjs7c0JBakZEOztTQWtGYSxXQUFXOzs7Ozs7Ozs7Ozs7Ozs7OztJQWF0QixnQ0FBUzs7OztJQUFULFVBQVcsS0FBVTtRQUVuQixNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3hCOztnQkFSRixJQUFJLFNBQUM7b0JBQ0osSUFBSSxFQUFFLFVBQVU7aUJBQ2pCOzt1QkE1RkQ7O1NBNkZhLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBY3ZCLGlDQUFTOzs7O0lBQVQsVUFBVyxLQUFVO1FBRW5CLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUM1Qjs7Z0JBUkYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxXQUFXO2lCQUNsQjs7d0JBeEdEOztTQXlHYSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSAgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBpc051bGwsXHJcbiAgaXNOaWwsXHJcbiAgaXNVbmRlZmluZWQsIFxyXG4gIGlzRnVuY3Rpb24sXHJcbiAgaXNBcnJheSxcclxuICBpc1N0cmluZyxcclxuICBpc09iamVjdCxcclxuICBpc051bWJlciBcclxufSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzTnVsbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIElzTnVsbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGlzTnVsbCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzVW5kZWZpbmVkJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNVbmRlZmluZWRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBpc1VuZGVmaW5lZCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzTmlsJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNOaWxQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBpc05pbCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzRnVuY3Rpb24nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0Z1bmN0aW9uUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAodmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgXHJcbiAgICByZXR1cm4gaXNGdW5jdGlvbih2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzTnVtYmVyJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNOdW1iZXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBpc051bWJlcih2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2lzU3RyaW5nJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNTdHJpbmdQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgXHJcbiAgdHJhbnNmb3JtICh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICBcclxuICAgIHJldHVybiBpc1N0cmluZyh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdpc0FycmF5J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNBcnJheVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIFxyXG4gICAgcmV0dXJuIGlzQXJyYXkodmFsdWUpO1xyXG4gIH1cclxufVxyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdpc09iamVjdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIElzT2JqZWN0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAodmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgXHJcbiAgICByZXR1cm4gaXNPYmplY3QodmFsdWUpO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNEZWZpbmVkJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNEZWZpbmVkUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAodmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgXHJcbiAgICByZXR1cm4gIWlzVW5kZWZpbmVkKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ==