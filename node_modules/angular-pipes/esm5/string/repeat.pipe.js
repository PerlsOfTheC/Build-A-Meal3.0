/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isString } from '../utils/utils';
var RepeatPipe = /** @class */ (function () {
    function RepeatPipe() {
    }
    /**
     * @param {?} input
     * @param {?=} times
     * @param {?=} characters
     * @return {?}
     */
    RepeatPipe.prototype.transform = /**
     * @param {?} input
     * @param {?=} times
     * @param {?=} characters
     * @return {?}
     */
    function (input, times, characters) {
        if (times === void 0) { times = 1; }
        if (characters === void 0) { characters = ''; }
        if (!isString(input)) {
            return input;
        }
        if (times <= 0) {
            times = 1;
        }
        var /** @type {?} */ repeated = [input];
        for (var /** @type {?} */ i = 1; i < times; ++i) {
            repeated.push(input);
        }
        return repeated.join(characters);
    };
    RepeatPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'repeat'
                },] },
    ];
    return RepeatPipe;
}());
export { RepeatPipe };
function RepeatPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    RepeatPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    RepeatPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwZWF0LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXBpcGVzLyIsInNvdXJjZXMiOlsic3RyaW5nL3JlcGVhdC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7Ozs7SUFPeEMsOEJBQVM7Ozs7OztJQUFULFVBQVcsS0FBVSxFQUFFLEtBQWlCLEVBQUUsVUFBdUI7UUFBMUMsc0JBQUEsRUFBQSxTQUFpQjtRQUFFLDJCQUFBLEVBQUEsZUFBdUI7UUFFL0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDZDtRQUVELEVBQUUsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNYO1FBRUQscUJBQU0sUUFBUSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMscUJBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDL0IsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUNyQjtRQUVELE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ2xDOztnQkFyQkYsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxRQUFRO2lCQUNmOztxQkFMRDs7U0FNYSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAncmVwZWF0J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUmVwZWF0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIFxyXG4gIHRyYW5zZm9ybSAoaW5wdXQ6IGFueSwgdGltZXM6IG51bWJlciA9IDEsIGNoYXJhY3RlcnM6IHN0cmluZyA9ICcnKTogYW55IHtcclxuICAgIFxyXG4gICAgaWYgKCFpc1N0cmluZyhpbnB1dCkpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAodGltZXMgPD0gMCkge1xyXG4gICAgICB0aW1lcyA9IDE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnN0IHJlcGVhdGVkID0gW2lucHV0XTtcclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGltZXM7ICsraSkge1xyXG4gICAgICByZXBlYXRlZC5wdXNoKGlucHV0KVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4gcmVwZWF0ZWQuam9pbihjaGFyYWN0ZXJzKTtcclxuICB9XHJcbn0iXX0=